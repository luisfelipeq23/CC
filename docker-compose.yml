version: "3.9"

services:
# # Databases
#   cc_frontend_db:
#     build: ./db/
#     image: cc_frontend_db
#     hostname: cc_frontend_db_host
#     container_name: cc_frontend_db
#     restart: always
#     env_file:
#      - .env
#     environment:
#       - TZ=Europe/Madrid
#       - POSTGRES_DB:${POSTGRES_DB}
#       - POSTGRES_USER:${POSTGRES_USER}
#       - POSTGRES_PASSWORD:${POSTGRES_PASSWORD}
#     labels:
#       - cc_frontend_db
#     ports:
#       - 5432
#     networks:
#       - cc_backend
#     command: postgres
  cc_keycloak_db:
    build: ./keycloak_db/
    image: cc_keycloak_db
    hostname: cc_keycloak_db_host
    container_name: cc_keycloak_db
    restart: always
    env_file:
      - .env
    environment:
      - TZ=Europe/Madrid
      - POSTGRES_DB:${POSTGRES_DB}
      - POSTGRES_USER:${POSTGRES_USER}
      - POSTGRES_PASSWORD:${POSTGRES_PASSWORD}
    labels:
      - cc_keycloak_db
    ports:
      - 5432
    networks:
      - cc_backend
    command: postgres
#   pgadmin:
#     container_name: cc_pgadmin4
#     hostname: cc_pgadmin_host
#     image: dpage/pgadmin4:6
#     restart: always
#     environment:
#       PGADMIN_DEFAULT_EMAIL: cc_admin@admin.com
#       PGADMIN_DEFAULT_PASSWORD: p455w0rd
#       PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 50
#       PGADMIN_CONFIG_FILE_LOG_LEVEL: 50
#       PGADMIN_CONFIG_SERVER_MODE: 'False'
#     depends_on:
#       - cc_frontend_db
#       - cc_keycloak_db
#     labels:
#       - cc_pgadmin
#     ports:
#       - "5050:80"
#     networks:
#       - cc_backend
# # Services
#   frontend:
#     build: ./frontend/
#     hostname: cc_frontend_host
#     container_name: cc_frontend
#     image: cc_frontend
#     environment:
#      - DJANGO_SETTINGS_MODULE:cc_proyecto.settings
#     restart: always
#     depends_on:
#       cc_frontend_db:
#         condition: service_started
#     labels:
#       - cc_frontend
#     ports:
#       - 8000:8000
#     networks:
#       - cc_frontend
#       - cc_backend
#     command: bash -c "python manage.py makemigrations cc_proyecto && python manage.py migrate --no-input --run-syncdb && python manage.py runserver 0.0.0.0:8000"
  keycloak:
    build: ./keycloak/
    hostname: cc_keycloak_host
    image: cc_keycloak
    container_name: cc_keycloak
    restart: always
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    depends_on:
      cc_keycloak_db:
        condition: service_started
    labels:
      - cc_keycloak
    ports: 
      - 8080:8080
    networks:
      - cc_backend
      - cc_frontend
    command: start-dev
#   zookeeper:
#     #build: ./zookeeper/
#     hostname: cc_zookeeper_host
#     container_name: cc_zookeeper
#     image: 'bitnami/zookeeper:latest'
#     restart: always
#     labels:
#       - cc_zookeeper
#     ports:
#       - 2181
#     networks:
#         - cc_backend
#   kafka:
#     #build: ./kafka/
#     hostname: cc_kafka_host
#     image: 'bitnami/kafka:latest'
#     container_name: cc_kafka
#     restart: always
#     depends_on:
#       zookeeper:
#         condition: service_started
#     labels:
#       - cc_kafka
#     ports:
#       - 9092
#     networks:
#       - cc_backend
  minio:
    build: ./minio/
    hostname: cc_minio_host
    image: cc_minio
    container_name: cc_minio
    restart: always
    labels:
      - cc_minio
    volumes:
      - cc_minio_volume:/cc/minio/volume/
    ports:
      - 9000:9000
    networks:
      - cc_backend
  # worker:
  #   build: ./worker/
  #   hostname: cc_worker_host
  #   image: 'cc_worker'
  #   container_name: cc_worker
  #   restart: always
  #   environment:
  #     - PIP_DISABLE_PIP_VERSION_CHECK=1
  #     - PYTHONDONTWRITEBYTECODE=1
  #     - PYTHONUNBUFFERED=1
  #   depends_on:
  #     minio:
  #       condition: service_started
  #   labels:
  #     - cc_worker
  #   ports:
  #     - 9092
  #   networks:
  #     - cc_backend
  #   volumes:
  #     - cc_worker_volume:/cc/worker/volume/
networks:
  cc_backend:
    name: cc_backend
    driver: bridge
  cc_frontend:
    name: cc_frontend
    driver: bridge
volumes:
  cc_minio_volume:
    name: cc_minio_vol
  cc_worker_volume:
    name: cc_worker_vol
